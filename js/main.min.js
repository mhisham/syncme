function isMobile(){return navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i)?!0:!1}function orientHandler(e){var o=e.gamma,t=e.beta,n=e.alpha,r={tiltLR:o,tiltFB:t,dir:n};sendData(r)}function work(e,o,t){document.getElementById("doTiltLR").innerHTML=Math.round(e),document.getElementById("doTiltFB").innerHTML=Math.round(o),document.getElementById("doDirection").innerHTML=Math.round(t);var n=document.getElementById("imgLogo");n.style.webkitTransform="rotate("+e+"deg) rotate3d(1,0,0, "+-1*o+"deg)",n.style.MozTransform="rotate("+e+"deg)",n.style.transform="rotate("+e+"deg) rotate3d(1,0,0, "+-1*o+"deg)"}function startSend(){socket.emit("changes",{msg:"hi"})}function sendData(e){socket.emit("changes",e)}function hideQr(){document.getElementById("qr_code").style.display="none",document.getElementById("device").style.display="block"}function newroom(e){e&&(e="?r="+e);{var o=document.getElementById("qr_code_img");new QRCode(o,{text:url+e,width:128,height:128,colorDark:"#000000",colorLight:"#ffffff",correctLevel:QRCode.CorrectLevel.H})}}var QueryString=function(){for(var e={},o=window.location.search.substring(1),t=o.split("&"),n=0;n<t.length;n++){var r=t[n].split("=");if("undefined"==typeof e[r[0]])e[r[0]]=decodeURIComponent(r[1]);else if("string"==typeof e[r[0]]){var i=[e[r[0]],decodeURIComponent(r[1])];e[r[0]]=i}else e[r[0]].push(decodeURIComponent(r[1]))}return e}(),roomNum=QueryString.r?QueryString.r:null;isMobile()?window.DeviceOrientationEvent&&(console.log("DeviceOrientation is supported"),window.addEventListener("deviceorientation",orientHandler,!1),hideQr()):document.getElementById("device").style.display="none";var deviceType="desktop";isMobile()&&(deviceType="mobile");var socket=io("http://"+window.location.hostname+":88");null==roomNum?(socket.emit("join",{type:deviceType}),socket.on("joined",function(e){roomNum=e.room,console.log("room",roomNum),startSend(),newroom(roomNum)})):(socket.emit("join",{type:deviceType,room:roomNum}),socket.on("joined",function(e){roomNum=e.room,console.log("room",roomNum),startSend(),newroom("")}));var appear=!0;socket.on("changes",function(e){appear&&(hideQr(),appear=!1),work(e.tiltLR,e.tiltFB,e.dir)});